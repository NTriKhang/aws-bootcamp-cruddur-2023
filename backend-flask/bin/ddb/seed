#!/usr/bin/env python3

import boto3
import os
import sys
from datetime import datetime, timedelta, timezone
import uuid

current_path = os.path.dirname(os.path.abspath(__file__))
parent_path = os.path.abspath(os.path.join(current_path, '..', '..'))
sys.path.append(parent_path)
from lib.db import db

attrs = {
  'endpoint_url': 'http://localhost:8000'
}
# unset endpoint url for use with production database
if len(sys.argv) == 2:
  if "prod" in sys.argv[1]:
    attrs = {}
ddb = boto3.client('dynamodb',**attrs)

def get_user_uuids():
    sql = """
        SELECT 
        users.uuid,
        users.display_name,
        users.handle
        FROM users
        WHERE
        users.handle IN(
            %(my_handle)s,
            %(other_handle)s
        )
        """
    users = db.query_array_json(sql,{
        'my_handle':  'andrewbrown',
        'other_handle': 'bayko'
    })
    my_user    = next((item for item in users if item["handle"] == 'andrewbrown'), None)
    other_user = next((item for item in users if item["handle"] == 'bayko'), None)
    results = {
        'my_user': my_user,
        'other_user': other_user
    }
    print('get_user_uuids')
    print(results)
    return results


def create_message_group(client,message_group_uuid, my_user_uuid, last_message_at=None, message=None, other_user_uuid=None, other_user_display_name=None, other_user_handle=None):
    table_name = 'cruddur-messages'
    record = {
        'pk':   {'S': f"GRP#{my_user_uuid}"},
        'sk':   {'S': last_message_at},
        'message_group_uuid': {'S': message_group_uuid},
        'message':  {'S': message},
        'user_uuid': {'S': other_user_uuid},
        'user_display_name': {'S': other_user_display_name},
        'user_handle': {'S': other_user_handle}
    }

    response = client.put_item(
        TableName=table_name,
        Item=record
    )
    print("create message group")
    print(response)

def create_message(client,message_group_uuid, created_at, message, my_user_uuid, my_user_display_name, my_user_handle):
    table_name = 'cruddur-messages'
    record = {
        'pk':   {'S': f"MSG#{message_group_uuid}"},
        'sk':   {'S': created_at },
        'message_uuid': { 'S': str(uuid.uuid4()) },
        'message': {'S': message},
        'user_uuid': {'S': my_user_uuid},
        'user_display_name': {'S': my_user_display_name},
        'user_handle': {'S': my_user_handle}
    }
    # insert the record into the table
    response = client.put_item(
        TableName=table_name,
        Item=record
    )
    # print the response
    print("Create message")
    print(response, flush=True)
    
message_group_uuid = "5ae290ed-55d1-47a0-bc6d-fe2bc2700399" 
now = datetime.now(timezone.utc).astimezone()
users = get_user_uuids()

create_message_group(
    client=ddb,
    message_group_uuid=message_group_uuid,
    my_user_uuid=users['my_user']['uuid'],
    other_user_uuid=users['other_user']['uuid'],
    other_user_handle=users['other_user']['handle'],
    other_user_display_name=users['other_user']['display_name'],
    last_message_at=now.isoformat(),
    message="this is a filler message"
)

create_message_group(
    client=ddb,
    message_group_uuid=message_group_uuid,
    my_user_uuid=users['other_user']['uuid'],
    other_user_uuid=users['my_user']['uuid'],
    other_user_handle=users['my_user']['handle'],
    other_user_display_name=users['my_user']['display_name'],
    last_message_at=now.isoformat(),
    message="this is a filler message"
)

conversation = """
Person 1: Have you ever watched Babylon 5? It's one of my favorite TV shows!
Person 2: Yes, I have! I love it too. What's your favorite season?
Person 1: I think my favorite season has to be season 3. So many great episodes, like "Severed Dreams" and "War Without End."
Person 2: Yeah, season 3 was amazing! I also loved season 4, especially with the Shadow War heating up and the introduction of the White Star.
Person 1: Agreed, season 4 was really great as well. I was so glad they got to wrap up the storylines with the Shadows and the Vorlons in that season.
Person 2: Definitely. What about your favorite character? Mine is probably Londo Mollari.
"""

lines = conversation.lstrip('\n').rstrip('\n').split('\n')

for i in range(len(lines)):
    if lines[i].startswith('Person 1: '):
        key = 'my_user'
        message = lines[i].replace('Person 1: ', '')
    elif lines[i].startswith('Person 2: '):
        key = 'other_user'
        message = lines[i].replace('Person 2: ', '')
    else:
        print(lines[i])
        raise 'invalid line'

    created_at = (now - timedelta(minutes=i)).isoformat()
    create_message(
        ddb,
        message_group_uuid,
        created_at,
        message,
        users[key]['uuid'],
        users[key]['display_name'],
        users[key]['handle']
    )

